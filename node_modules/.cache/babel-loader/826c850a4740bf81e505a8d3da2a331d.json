{"ast":null,"code":"var _jsxFileName = \"G:\\\\\\u4EE3\\u7801\\\\React\\\\\\u811A\\u624B\\u67B6\\\\react_staging\\\\src\\\\containers\\\\Count\\\\index.jsx\";\n\n/**\r\n * 作者：Mr.wang\r\n * 时间：2022/4/15\r\n * 文件名：index\r\n * 项目名称：脚手架\r\n * WebStorm\r\n */\nimport { createIncrementAction, createDecrementAction, createDecrementSyncAction } from \"../../redux/count_action\"; //引入connect用于链接UI组件与redux\n\nimport { connect } from \"react-redux\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Count extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.increment = () => {\n      const {\n        value\n      } = this.selectNumber;\n      this.props.increment(value * 1);\n    };\n\n    this.decrement = () => {\n      const {\n        value\n      } = this.selectNumber;\n      this.props.decrement(value * 1);\n    };\n\n    this.incrementIfOdd = () => {\n      const {\n        value\n      } = this.selectNumber;\n\n      if (this.props.count % 2 !== 0) {\n        this.props.incrementIfOdd(value * 1);\n      }\n    };\n\n    this.incrementAsync = () => {\n      const {\n        value\n      } = this.selectNumber;\n      this.props.incrementAsync(value * 1, 500);\n    };\n  }\n\n  render() {\n    const {\n      count\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"\\u5F53\\u524D\\u6C42\\u548C\\u4E3A\\uFF1A\", count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        ref: c => this.selectNumber = c,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2\",\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"3\",\n          children: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.increment,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.decrement,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.incrementIfOdd,\n        children: \"\\u5F53\\u524D\\u6C42\\u548C\\u4E3A\\u5947\\u6570\\u52A0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.incrementAsync,\n        children: \"\\u5F02\\u6B65\\u52A0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), \"\\xA0\\xA0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n\n} //创建并暴露一个count的容器组件\n\n\nexport default connect( // 函数的返回值对象中的key就作为传递给UI组件的props的值 -- 状态\nstate => ({\n  count: state\n}), // 函数的返回值对象中的key就作为传递给UI组件的props的值 -- 状态\n// mapDispatchToProps简写方式\n{\n  increment: createIncrementAction,\n  decrement: createDecrementAction,\n  incrementIfOdd: createIncrementAction,\n  incrementAsync: createDecrementSyncAction\n})(Count);","map":{"version":3,"sources":["G:/代码/React/脚手架/react_staging/src/containers/Count/index.jsx"],"names":["createIncrementAction","createDecrementAction","createDecrementSyncAction","connect","React","Component","Count","increment","value","selectNumber","props","decrement","incrementIfOdd","count","incrementAsync","render","c","state"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SACIA,qBADJ,EAEIC,qBAFJ,EAGIC,yBAHJ,QAIO,0BAJP,C,CAKA;;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAEA,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAAA;AAAA;;AAAA,SAE1BE,SAF0B,GAEd,MAAI;AACZ,YAAM;AAAEC,QAAAA;AAAF,UAAY,KAAKC,YAAvB;AACA,WAAKC,KAAL,CAAWH,SAAX,CAAqBC,KAAK,GAAC,CAA3B;AACH,KALyB;;AAAA,SAO1BG,SAP0B,GAOd,MAAI;AACZ,YAAM;AAAEH,QAAAA;AAAF,UAAY,KAAKC,YAAvB;AACA,WAAKC,KAAL,CAAWC,SAAX,CAAqBH,KAAK,GAAC,CAA3B;AACH,KAVyB;;AAAA,SAY1BI,cAZ0B,GAYT,MAAI;AACjB,YAAM;AAAEJ,QAAAA;AAAF,UAAY,KAAKC,YAAvB;;AACA,UAAK,KAAKC,KAAL,CAAWG,KAAZ,GAAqB,CAArB,KAA2B,CAA/B,EAAkC;AAC9B,aAAKH,KAAL,CAAWE,cAAX,CAA0BJ,KAAK,GAAC,CAAhC;AACH;AAEJ,KAlByB;;AAAA,SAoB1BM,cApB0B,GAoBT,MAAI;AACjB,YAAM;AAAEN,QAAAA;AAAF,UAAY,KAAKC,YAAvB;AACA,WAAKC,KAAL,CAAWI,cAAX,CAA0BN,KAAK,GAAC,CAAhC,EAAkC,GAAlC;AAEH,KAxByB;AAAA;;AAyB1BO,EAAAA,MAAM,GAAG;AACL,UAAM;AAACF,MAAAA;AAAD,QAAU,KAAKH,KAArB;AACA,wBACI;AAAA,8BACI;AAAA,2DAAWG,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,GAAG,EAAEG,CAAC,IAAE,KAAKP,YAAL,GAAoBO,CAApC;AAAA,gCACI;AAAQ,UAAA,KAAK,EAAG,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,KAAK,EAAG,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,UAAA,KAAK,EAAG,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,2BAOI;AAAQ,QAAA,OAAO,EAAE,KAAKT,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,2BAQI;AAAQ,QAAA,OAAO,EAAE,KAAKI,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,2BASI;AAAQ,QAAA,OAAO,EAAE,KAAKC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,2BAUI;AAAQ,QAAA,OAAO,EAAE,KAAKE,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH;;AAzCyB,C,CA4C9B;;;AACA,eAAeX,OAAO,EAClB;AACAc,KAAK,KAAG;AAACJ,EAAAA,KAAK,EAACI;AAAP,CAAH,CAFa,EAGlB;AACA;AACA;AACIV,EAAAA,SAAS,EAACP,qBADd;AAEIW,EAAAA,SAAS,EAACV,qBAFd;AAGIW,EAAAA,cAAc,EAACZ,qBAHnB;AAIIc,EAAAA,cAAc,EAACZ;AAJnB,CALkB,CAAP,CAUZI,KAVY,CAAf","sourcesContent":["/**\r\n * 作者：Mr.wang\r\n * 时间：2022/4/15\r\n * 文件名：index\r\n * 项目名称：脚手架\r\n * WebStorm\r\n */\r\n\r\nimport {\r\n    createIncrementAction,\r\n    createDecrementAction,\r\n    createDecrementSyncAction\r\n} from \"../../redux/count_action\";\r\n//引入connect用于链接UI组件与redux\r\nimport {connect} from \"react-redux\";\r\nimport React, {Component} from \"react\";\r\n\r\nclass Count extends Component {\r\n    //加\r\n    increment = ()=>{\r\n        const { value } = this.selectNumber;\r\n        this.props.increment(value*1)\r\n    }\r\n    // 减\r\n    decrement = ()=>{\r\n        const { value } = this.selectNumber;\r\n        this.props.decrement(value*1)\r\n    }\r\n    // 奇数加\r\n    incrementIfOdd = ()=>{\r\n        const { value } = this.selectNumber;\r\n        if ((this.props.count) % 2 !== 0) {\r\n            this.props.incrementIfOdd(value*1)\r\n        }\r\n\r\n    }\r\n    // 异步加\r\n    incrementAsync = ()=>{\r\n        const { value } = this.selectNumber;\r\n        this.props.incrementAsync(value*1,500)\r\n\r\n    }\r\n    render() {\r\n        const {count} = this.props;\r\n        return (\r\n            <div>\r\n                <h1>当前求和为：{count}</h1>\r\n                <select ref={c=>this.selectNumber = c}>\r\n                    <option value = \"1\">1</option>\r\n                    <option value = \"2\">2</option>\r\n                    <option value = \"3\">3</option>\r\n                </select>&nbsp;&nbsp;\r\n                <button onClick={this.increment}>+</button>&nbsp;&nbsp;\r\n                <button onClick={this.decrement}>-</button>&nbsp;&nbsp;\r\n                <button onClick={this.incrementIfOdd}>当前求和为奇数加</button>&nbsp;&nbsp;\r\n                <button onClick={this.incrementAsync}>异步加</button>&nbsp;&nbsp;\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n//创建并暴露一个count的容器组件\r\nexport default connect(\r\n    // 函数的返回值对象中的key就作为传递给UI组件的props的值 -- 状态\r\n    state=>({count:state}),\r\n    // 函数的返回值对象中的key就作为传递给UI组件的props的值 -- 状态\r\n    // mapDispatchToProps简写方式\r\n    {\r\n        increment:createIncrementAction,\r\n        decrement:createDecrementAction,\r\n        incrementIfOdd:createIncrementAction,\r\n        incrementAsync:createDecrementSyncAction\r\n})(Count)\r\n"]},"metadata":{},"sourceType":"module"}